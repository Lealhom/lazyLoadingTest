buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.omg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

artifacts {
	archives file: file("build/libs/lazy-loading-test.jar")
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	compile('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')

//	compile "org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.1"
	compile "org.eclipse.persistence:org.eclipse.persistence.jpa:2.6.4"
	compile "org.eclipse.persistence:eclipselink:2.6.4"

	compile group: 'de.empulse.eclipselink', name: 'staticweave-maven-plugin', version: '1.0.0'

	compileOnly 'org.projectlombok:lombok:1.16.18'
	compileOnly 'javax.ws.rs:javax.ws.rs-api:2.0.1'

	compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.2'

}

task performJPAWeaving(type: JavaExec, dependsOn: "compileJava"){
	inputs.dir compileJava.destinationDir
	outputs.dir compileJava.destinationDir
	main "org.eclipse.persistence.tools.weaving.jpa.StaticWeave"
	args  "-persistenceinfo",
			"src/main/resources",
			compileJava.destinationDir.getAbsolutePath(),
			compileJava.destinationDir.getAbsolutePath()
	classpath = configurations.compile
}

tasks.withType(Jar){
	dependsOn "performJPAWeaving"
}

